---
export const prerender = false;

import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getLiveEntry } from 'astro:content';
import { LiveCollectionValidationError } from 'astro/content/runtime';
import { type Product } from '../../../loaders/products-loader';

const { slug } = Astro.params;
console.log("ðŸš€ ~ Product page ~ slug (server):", slug)

const { entry: productItem, error } = await getLiveEntry('products', { slug: slug ?? "" });
if (LiveCollectionValidationError.is(error)) {
  console.error("ðŸš€ ~ Product page ~ collection shema validation errors:", error)
} else if (error) {
  console.error("ðŸš€ ~ Product page ~ collection error:", error)
}

if (!productItem)
  console.error("ðŸš€ ~ Product page ~ could not get product by slug:", slug)


var extractedProduct: Product | undefined = productItem as unknown as Product;
console.log("ðŸš€ ~ Product page ~ data:", extractedProduct)
/*
export type Product = {
  id: number;
  title: string;
  description?: string;
  unit?: string;
  quantityInPack?: number;
  price: number;
  whsPrice1: number;
  whsPrice2: number
  category: string;
  colors: Array<string>;
  image: string;
  slug: string;
}
*/
---
<script is:inline data-slug={slug}>
  //import { setCurrentProduct } from '../../../stores/product-store';
  //import { setLatVisitedPage } from '../../../stores/last-visited-page-store';

  //setCurrentProduct({ title, category });
  //setLatVisitedPage(slug);
  console.log("ðŸš€ ~ Product page ~ slug (client):", dataset.slug)
</script>

<BaseLayout title=`ÐšÐ°Ñ‚Ð°Ð»Ð¾Ð³ - ${extractedProduct?.title}`>
    <div class="px-4">
      <span>Ð¡Ñ‚Ñ€Ð°Ð½Ð¸Ñ†Ð° Ð² Ñ€Ð°Ð·Ñ€Ð°Ð±Ð¾Ñ‚ÐºÐµ...</span>
    </div>
</BaseLayout>