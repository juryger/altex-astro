---
export const prerender = false;

import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getLiveEntry } from 'astro:content';
import { LiveCollectionValidationError } from 'astro/content/runtime';
import { type Product } from '../../../loaders/products-loader';

const { slug } = Astro.params;
console.log("🚀 ~ Product page ~ slug (server):", slug)

const { entry: productItem, error } = await getLiveEntry('products', { slug: slug ?? "" });
if (LiveCollectionValidationError.is(error)) {
  console.error("🚀 ~ Product page ~ collection shema validation errors:", error)
} else if (error) {
  console.error("🚀 ~ Product page ~ collection error:", error)
}

if (!productItem) {
  console.error("🚀 ~ Product page ~ could not get product by slug:", slug)
}

// Keep selected product in Session
//Astro.session?.set('currentProduct', extractedProduct);
//const sessionProduct = await Astro.session?.get('currentProduct');

const extractedProduct: Product | undefined = productItem as unknown as Product;
console.log("🚀 ~ Product page ~ data:", extractedProduct)
---

<script>
  const element = document.getElementById('my-element');
  const productSlug = element?.dataset.slug;
  console.log("🚀 ~ Product page ~ slug (client):", productSlug)
</script>

<BaseLayout title=`Каталог - ${extractedProduct?.title}`>
    <div class="px-4" data-slug={slug} data-title={extractedProduct.title} data-category-id={extractedProduct.categoryId} data-category-slug={extractedProduct.categorySlug}>
      <span>Страница в разработке...</span>
      <!-- <span>Значение продукта из сессии {sessionProduct?.title}</span> -->
    </div>
</BaseLayout>