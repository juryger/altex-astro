---
import NavPathResolver, { type NavPathItem } from '../utils/nav-path-resolver';
import { currentProduct } from '../stores/product-store';

const { currentPath } = Astro.props;
const pathResolver = new NavPathResolver();

const getBreadcrumbs = (path: string): Array<NavPathItem> => {
  const splitPath = path.split('/').reverse();
  console.log("ðŸš€ ~ Breadcrumbs component ~ path:", path)
  console.log("ðŸš€ ~ Breadcrumbs component ~ path collection:", splitPath)
  
  if (path.endsWith("/")) {
    splitPath.pop();
  }

  var result: Array<NavPathItem> = [];
  var currentRelativePath = '';

  while(splitPath.length > 0) { 
    const pathItem =  splitPath.pop() ?? "";
    currentRelativePath += `${pathItem}/`;
    //console.log("ðŸš€ ~ Breadcrumbs component ~ processing path item: %s", pathItem)

    const resolvedPathItem = pathResolver.resolvePathItem(pathItem);
    if (resolvedPathItem) {
      //console.log("ðŸš€ ~ Breadcrumbs component ~ resolved path item:", resolvedPathItem)
      resolvedPathItem.__url = currentRelativePath;
      if (resolvedPathItem.displayOptions.isBreadcrumbs) {
        result.push(resolvedPathItem);
      } else {
        console.log("ðŸš€ ~ Breadcrumbs component ~ path item is marked as excluded from the breadcrumbs and will be skipped:", pathItem)
      }
    } else {
      console.error("ðŸš€ ~ Breadcrumbs component ~ could not resolve path item:", pathItem)
    }
  }
  
  return result;
}

console.log("ðŸš€ ~ Breadcrumbs component ~ current product:", currentProduct?.value)

const breadcrumbs: Array<NavPathItem> = getBreadcrumbs(currentPath);
console.log("ðŸš€ ~ Breadcrumbs component ~ parsed path:", breadcrumbs)
---

<div class="breadcrumbs text-sm px-8">
  {breadcrumbs.length > 1 && <ul class="list-disc">
      {breadcrumbs && breadcrumbs.map((x: NavPathItem, index: number) => (
        <li>
          {(index !== breadcrumbs.length - 1) ? 
            <a href={x.__url}>{x.value}</a> : 
            <span class="!no-underline !cursor-default">{x.value}</span>} 
        </li>
      ))}
    </ul>}
</div>